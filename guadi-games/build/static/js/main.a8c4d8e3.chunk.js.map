{"version":3,"sources":["img/1.png","img/2.png","img/3.png","img/4.png","img/5.png","img/6.png","img/7.png","img/8.png","components/Imagen/Imagen.jsx","components/Button/Button.jsx","components/LetraInput/LetraInput.jsx","components/HistorialLetras/HistorialLetras.jsx","components/LetraPalabra/LetraPalabra.jsx","components/Palabra/Palabra.jsx","components/ListaDesplegable/ListaDesplegable.jsx","components/utils/utils.jsx","components/ArriesgarPalabra/ArriesgarPalabra.jsx","components/Ahorcado/Ahorcado.jsx","components/Footer/Footer.jsx","components/Header/Header.jsx","img/logo.png","App.jsx","reportWebVitals.js","index.js"],"names":["imageByName","imagen1","imagen2","imagen3","imagen4","imagen5","imagen6","imagen7","imagen8","Imagen","nombreImagen","className","src","alt","Button","title","clase","onClickHandler","disabled","type","onClick","value","LetraInput","onChangeHandler","onKeyPressHandler","statusJuego","maxLength","placeholder","onChange","onKeyPress","HistorialLetras","letrasElegidas","Object","keys","map","letra","index","renderLetraElegida","LetraPalabra","Palabra","palabra","letrasCorrectas","filter","renderLetra","split","palabraInterna","includes","ListaDesplegable","label","opciones","id","defaultValue","opcion","name","renderOptions","seleccionPalabra","tematicaElegida","palabrasDisponibles","cantidadPalabras","length","ramdomIndex","Math","floor","random","toUpperCase","ArriesgarPalabra","palabraArriesgada","Ahorcado","tematicas","useState","tematica","setTematica","palabraInicial","palabraSeleccionada","setPalabraSeleccionada","setLetrasElegidas","letraElegida","setLetraElegida","setPalabraArriesgada","cantidadErrores","setCantidadErrores","setStatusJuego","gameOver","withReactContent","Swal","fire","icon","text","showConfirmButton","letraInputOnClickHandler","e","timer","esAcierto","cantidadAciertos","letraPalabra","estaEnPalabra","errores","replace","gameVictory","palabraArriesgadaOnClickHandler","target","key","Footer","legales","Header","logo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8c4d8e3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.d0c09927.png\";","export default __webpack_public_path__ + \"static/media/2.feffe29b.png\";","export default __webpack_public_path__ + \"static/media/3.d16b7923.png\";","export default __webpack_public_path__ + \"static/media/4.cd3274e3.png\";","export default __webpack_public_path__ + \"static/media/5.c1f5a2aa.png\";","export default __webpack_public_path__ + \"static/media/6.c430de71.png\";","export default __webpack_public_path__ + \"static/media/7.74684eac.png\";","export default __webpack_public_path__ + \"static/media/8.0b110117.png\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport imagen1 from '../../img/1.png'\r\nimport imagen2 from '../../img/2.png'\r\nimport imagen3 from '../../img/3.png'\r\nimport imagen4 from '../../img/4.png'\r\nimport imagen5 from '../../img/5.png'\r\nimport imagen6 from '../../img/6.png'\r\nimport imagen7 from '../../img/7.png'\r\nimport imagen8 from '../../img/8.png'\r\n\r\nconst imageByName = {\r\n    1: imagen1,\r\n    2: imagen2,\r\n    3: imagen3,\r\n    4: imagen4,\r\n    5: imagen5,\r\n    6: imagen6,\r\n    7: imagen7,\r\n    8: imagen8\r\n\r\n}\r\n\r\nconst Imagen = ({nombreImagen}) => {\r\n    \r\n\r\n    return (\r\n        <div className=\"imagen\">\r\n            <img src={imageByName[nombreImagen]} alt=\"imagen Ahorcado\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nImagen.propTypes = {\r\n    nombreImagen: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Imagen\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({title, clase, onClickHandler, disabled}) => {\r\n    return (\r\n        <div className={`${clase}-container`}>\r\n            <input type=\"button\" className={clase} onClick={onClickHandler} value={title} disabled={disabled}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    clase: PropTypes.string.isRequired,\r\n    onClickHandler: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool,\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '../Button'\r\n\r\nconst LetraInput = ({value, onChangeHandler, onClickHandler, onKeyPressHandler, statusJuego}) => {\r\n    return (\r\n        <div className=\"letra\">\r\n            <input type=\"text\" className=\"letra-input\" maxLength=\"1\" placeholder=\"...\" onChange={onChangeHandler} onKeyPress={onKeyPressHandler} value={value}/>\r\n            <Button title=\"Elegir Letra\" clase=\"letra-button\" onClickHandler={onClickHandler} disabled={statusJuego !== \"inProgress\"} />  \r\n        </div>\r\n    )\r\n}\r\n\r\nLetraInput.propTypes = {\r\n    onChangeHandler: PropTypes.func.isRequired,\r\n    onClickHandler: PropTypes.func.isRequired,\r\n    onKeyPressHandler: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default LetraInput\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\n\r\nconst HistorialLetras = ({letrasElegidas}) => {\r\n\r\n    const renderLetraElegida = (letra, index) => {\r\n        \r\n        return (\r\n            <div key={`${letra}-${index}`} className=\"letraElegidaItem\">\r\n                <span className=\"letraElegida\">{letra}</span>\r\n                <span className={`statusLetra ${letrasElegidas[letra]?'verde':'rojo'}`}>{letrasElegidas[letra] ? <FaCheck /> : <FaTimes />}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"historial-letras\">\r\n            {letrasElegidas && Object.keys(letrasElegidas).map((letra, index) => renderLetraElegida(letra,index))}    \r\n        </div>\r\n    )\r\n}\r\n\r\nHistorialLetras.propTypes = {\r\n    letrasElegidas: PropTypes.object.isRequired, \r\n\r\n}\r\n\r\nexport default HistorialLetras\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LetraPalabra = ({letra,clase}) => {\r\n    \r\n    return (\r\n        <p className={clase}>\r\n            {letra}\r\n        </p>\r\n    )\r\n}\r\n\r\nLetraPalabra.propTypes = {\r\n    letra: PropTypes.string,\r\n    clase: PropTypes.string,\r\n}\r\n\r\nexport default LetraPalabra\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport LetraPalabra from '../LetraPalabra'\r\n\r\nconst Palabra = ({palabra, letrasElegidas, statusJuego}) => {\r\n\r\n    const letrasCorrectas = letrasElegidas && Object.keys(letrasElegidas).filter(letra => {\r\n        return letrasElegidas[letra] === true\r\n    })\r\n\r\n    const renderLetra = (letra, index, clase) => {\r\n        return <LetraPalabra key={letra+index} letra={letra} clase={clase} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"palabra\">    \r\n        {\r\n            palabra && palabra.split(\" \").map((palabraInterna,index) => {\r\n                return (\r\n                    <div className='palabraSeparada' key={`palabraSeparada-${index}`}>\r\n                        {\r\n                        palabraInterna.split('').map((letra,index) => {\r\n                            if(letra === ' ') {\r\n                                return renderLetra(' ',index, '')\r\n                            } else {\r\n                            return statusJuego === \"inProgress\" \r\n                            ? letrasCorrectas.includes(letra)? renderLetra(letra,index,'letraPalabra') : renderLetra(' ',index,'letraPalabra')\r\n                            : renderLetra(letra,index,'letraPalabra')\r\n                            }\r\n                        })\r\n                        }\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nPalabra.propTypes = {\r\n    palabra: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Palabra\r\n","import PropTypes from 'prop-types'\r\n\r\nconst ListaDesplegable = ({label, opciones, id, clase, onChangeHandler, defaultValue}) => {\r\n    \r\n    const renderOptions = opcion => {\r\n        return <option key={opcion.name} value={opcion.value}>{opcion.name}</option>\r\n    }\r\n    \r\n    return (\r\n        <div className={`${clase}-container`}>\r\n            {label && <label>{label}</label>}\r\n            <select id={id} key={id} className={clase} onChange={onChangeHandler} defaultValue={defaultValue}>\r\n                {opciones.map(opcion => renderOptions(opcion))}   \r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nListaDesplegable.propTypes = {\r\n    label: PropTypes.string,\r\n    clase: PropTypes.string,\r\n    selected: PropTypes.string,\r\n    onChangeHandler: PropTypes.func,\r\n    opciones: PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n        defaultValue: PropTypes.bool,\r\n    }))\r\n}\r\n\r\n\r\nexport default ListaDesplegable\r\n","export const seleccionPalabra = (tematicaElegida,palabrasDisponibles) => {\r\n    \r\n    const cantidadPalabras = palabrasDisponibles[tematicaElegida].length;\r\n    let ramdomIndex = Math.floor(Math.random()*cantidadPalabras)\r\n    const palabraSeleccionada = palabrasDisponibles[tematicaElegida][ramdomIndex]['palabra'];\r\n    return palabraSeleccionada.toUpperCase()\r\n    \r\n}\r\n\r\nexport const estaEnPalabra = (letra, palabraSeleccionada) =>{\r\n\r\n    let cantidadAciertos = palabraSeleccionada && palabraSeleccionada.split('').filter(letraPalabra => {\r\n        return letraPalabra === letra\r\n    }).length\r\n\r\n    \r\n    return cantidadAciertos && cantidadAciertos >0 ? true : false\r\n\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '../Button'\r\n\r\nconst ArriesgarPalabra = ({clase, onClickHandler, palabraArriesgada, onChangeHandler, onKeyPressHandler , statusJuego}) => {\r\n    return (\r\n        <div className={`arriesgar-palabra`}>\r\n            <input type=\"text\" name=\"arriesgar-palabra\" className={clase} placeholder='Arriesgar palabra...' value={palabraArriesgada} onChange={onChangeHandler} onKeyPress={onKeyPressHandler} />\r\n            <Button title=\"Arriesgar\" clase=\"button btnArriesgar\" onClickHandler={onClickHandler} disabled={statusJuego !== \"inProgress\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nArriesgarPalabra.propTypes = {\r\n    onClickHandler: PropTypes.func.isRequired,\r\n    onChangeHandler: PropTypes.func.isRequired,\r\n    palabraArriesgada: PropTypes.string,\r\n    clase: PropTypes.string,\r\n}\r\n\r\nexport default ArriesgarPalabra\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Imagen from '../Imagen';\r\nimport LetraInput from '../LetraInput';\r\nimport HistorialLetras from '../HistorialLetras';\r\nimport Palabra from '../Palabra';\r\nimport ListaDesplegable from '../ListaDesplegable';\r\nimport { seleccionPalabra, estaEnPalabra } from '../utils/utils';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport ArriesgarPalabra from '../ArriesgarPalabra';\r\nimport Button from '../Button';\r\n\r\n\r\nconst Ahorcado = ({palabrasDisponibles, tematicas}) => {\r\n    // States\r\n    const [tematica, setTematica] = useState('Personajes Animados');\r\n    const palabraInicial = seleccionPalabra('Personajes Animados', palabrasDisponibles)\r\n    const [palabraSeleccionada, setPalabraSeleccionada] = useState(palabraInicial);\r\n    const [letrasElegidas, setLetrasElegidas] = useState({});\r\n    const [letraElegida, setLetraElegida] = useState('');\r\n    const [palabraArriesgada, setPalabraArriesgada] = useState('');\r\n    const [cantidadErrores, setCantidadErrores] = useState(1);\r\n    const [statusJuego, setStatusJuego] = useState('inProgress')\r\n\r\n    const reiniciarOnClickHandler = () => {\r\n        setStatusJuego(\"inProgress\")\r\n        setCantidadErrores(1)\r\n        setPalabraArriesgada(\"\")\r\n        setLetraElegida(\"\")\r\n        setLetrasElegidas({})\r\n        setPalabraSeleccionada(seleccionPalabra(tematica,palabrasDisponibles))\r\n    }\r\n    \r\n    const gameOver = (cantidadErrores) => {\r\n        \r\n        if (cantidadErrores === 7) {\r\n            const MySwal = withReactContent(Swal)\r\n\r\n                 MySwal.fire({\r\n                     icon: 'error',\r\n                     title: 'AHORCADO!!',\r\n                     text: 'mucha suerte la próxima vez',\r\n                     showConfirmButton: true,\r\n                 })       \r\n            setStatusJuego('gameOver')\r\n        } \r\n    }\r\n\r\n    const gameVictory = letrasElegidas => {\r\n        \r\n        // revisar si ganó\r\n        const letrasCorrectas = Object.keys(letrasElegidas).filter(letra => {\r\n            return letrasElegidas[letra] === true\r\n        })\r\n        \r\n        const letrasPendientes = palabraSeleccionada.replace(/ /g, \"\").split('').filter((letra) => {\r\n            \r\n            return (!letrasCorrectas.includes(letra))\r\n            \r\n        })\r\n        \r\n        if(letrasPendientes.length === 0) {\r\n\r\n            const MySwal = withReactContent(Swal)\r\n\r\n            MySwal.fire({\r\n                icon: 'success',\r\n                title: 'Ganaste',\r\n                text: 'Te salvaste de ser Ahorcado',\r\n                showConfirmButton: true,\r\n                \r\n            }) \r\n            \r\n            setStatusJuego(\"win\")\r\n            setCantidadErrores(8)\r\n        }\r\n    }\r\n    \r\n    // Trae una palabra nueva cuando se cambia la temática del ahorcado\r\n    const onChangeHandler = (e) => {\r\n        setStatusJuego(\"inProgress\")\r\n        setTematica(e.target.value)\r\n        setLetrasElegidas({});\r\n        setLetraElegida('');\r\n        setCantidadErrores(1);\r\n        setPalabraArriesgada('');\r\n        setPalabraSeleccionada(seleccionPalabra(e.target.value,palabrasDisponibles));\r\n    }\r\n\r\n    // Guarda el state de la letra elegida.\r\n    const letraInputOnChangeHandler = (e) => {\r\n        setLetraElegida(e.target.value.toUpperCase())\r\n    }\r\n\r\n    const letraInputOnKeyPressHandler = (e) => {\r\n        \r\n        if(e.key === \"Enter\") {\r\n            letraInputOnClickHandler()\r\n        }   \r\n    }\r\n\r\n    const arriesgarPalabraOnKeyPressHandler = (e) => {\r\n        \r\n        if(e.key === \"Enter\") {\r\n            palabraArriesgadaOnClickHandler()\r\n        }\r\n    }\r\n\r\n    // Revisa si se eligió una letra, revisa si ya fue elegida, si está en la palabra y \r\n    // guarda el state de de las letrasElegidas\r\n    // también desencadenaría la aparición de las letras en la palabra.\r\n    const letraInputOnClickHandler = (e) => {\r\n        \r\n        if(letraElegida === ''){\r\n            const MySwal = withReactContent(Swal)\r\n\r\n            MySwal.fire({\r\n                icon: 'error',\r\n                title: 'Debes Elegir alguna letra!',\r\n                text: '',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        }\r\n        else {\r\n                \r\n              //Revisar si ya eligió esa Letra\r\n            \r\n             let letraRepetida = letrasElegidas && Object.keys(letrasElegidas).filter(letra =>{\r\n                 return letra === letraElegida\r\n             }).length\r\n\r\n              //Si ya la eligió, sweet alert\r\n              //Si no, revisar si está en la palabra\r\n             if(letraRepetida >0) {\r\n                 const MySwal = withReactContent(Swal)\r\n\r\n                 MySwal.fire({\r\n                     icon: 'error',\r\n                     title: 'Ya Elegiste esta Letra!',\r\n                     text: '',\r\n                     showConfirmButton: false,\r\n                     timer: 1500\r\n                 })   \r\n             } else {\r\n                  //revisar si está en palabra\r\n                 let esAcierto = estaEnPalabra(letraElegida, palabraSeleccionada) \r\n                 let errores = cantidadErrores\r\n\r\n                 if(esAcierto === false) {\r\n                     \r\n                    errores = cantidadErrores + 1\r\n                    setCantidadErrores(errores)\r\n                    gameOver(errores)\r\n                 }\r\n                  //Agregar a letrasElegidas\r\n                 setLetrasElegidas({...letrasElegidas, [letraElegida]: esAcierto}) \r\n                 setLetraElegida(\"\")\r\n                 gameVictory({...letrasElegidas, [letraElegida]: esAcierto})\r\n                 \r\n             } \r\n\r\n        }\r\n    }\r\n\r\n    const palabraArriesgadaOnChangeHandler = (e) => {\r\n        setPalabraArriesgada(e.target.value.toUpperCase())\r\n    }\r\n\r\n    const palabraArriesgadaOnClickHandler = (e) => {\r\n        \r\n        const MySwal = withReactContent(Swal)\r\n\r\n                 MySwal.fire({\r\n                     icon: 'error',\r\n                     title: 'Ya Elegiste esta Letra!',\r\n                     text: '',\r\n                     showConfirmButton: false,\r\n                     timer: 1500\r\n                 })   \r\n\r\n        if(palabraArriesgada === ''){\r\n            const MySwal = withReactContent(Swal)\r\n\r\n            MySwal.fire({\r\n                icon: 'error',\r\n                title: 'Debes Arriesgar Alguna Palabra!',\r\n                text: '',\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n        }\r\n        else {\r\n                \r\n             if(palabraArriesgada === palabraSeleccionada) {\r\n\r\n                const MySwal = withReactContent(Swal)\r\n\r\n                MySwal.fire({\r\n                    icon: 'success',\r\n                    title: 'Ganaste',\r\n                    text: 'Te salvaste de ser Ahorcado',\r\n                    showConfirmButton: true,\r\n                    \r\n                }) \r\n                \r\n                setStatusJuego(\"win\")\r\n                setCantidadErrores(8)\r\n\r\n             } else {\r\n\r\n                const MySwal = withReactContent(Swal)\r\n\r\n                MySwal.fire({\r\n                    icon: 'error',\r\n                    title: 'Ups!!',\r\n                    text: 'Piensa bien antes de volver a arriesgarte',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n                let errores = cantidadErrores + 1\r\n                setCantidadErrores(errores)   \r\n                gameOver(errores)\r\n             }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"ahorcado\">\r\n            <h2 className=\"ahorcado-titulo\">Ahorcado</h2>\r\n            <div className='ahorcado-nav'>\r\n                <ListaDesplegable \r\n                    label=\"Tema Elegido\" \r\n                    opciones={tematicas} \r\n                    id=\"tematicas\" \r\n                    clase=\"tematicas\" \r\n                    defaultValue={tematica}\r\n                    onChangeHandler={onChangeHandler} />\r\n                <Button \r\n                        title=\"Nuevo Juego\" \r\n                        clase=\"btn-nuevo-juego\"\r\n                        onClickHandler={reiniciarOnClickHandler}\r\n                        />\r\n            </div>\r\n            <div className=\"ahorcado-container\">\r\n                <div className=\"info-juego\">\r\n                    <div>\r\n                        <Imagen nombreImagen={cantidadErrores}/>\r\n                        <HistorialLetras letrasElegidas={letrasElegidas} />\r\n                    </div>\r\n                    <div className='input-container'>\r\n                        <LetraInput \r\n                            value={letraElegida} \r\n                            onChangeHandler={letraInputOnChangeHandler} \r\n                            onClickHandler={letraInputOnClickHandler} \r\n                            onKeyPressHandler={letraInputOnKeyPressHandler}\r\n                            statusJuego={statusJuego}/>\r\n                        <ArriesgarPalabra \r\n                            palabraArriesgada={palabraArriesgada} \r\n                            onChangeHandler={palabraArriesgadaOnChangeHandler} \r\n                            onClickHandler={palabraArriesgadaOnClickHandler} \r\n                            onKeyPressHandler={arriesgarPalabraOnKeyPressHandler}\r\n                            statusJuego={statusJuego}/>\r\n                    </div>\r\n                </div>\r\n                <Palabra \r\n                    palabra={palabraSeleccionada} \r\n                    letrasElegidas={letrasElegidas} \r\n                    statusJuego={statusJuego} />\r\n            </div>  \r\n        </div>\r\n    )\r\n}\r\n\r\nAhorcado.propTypes = {\r\n    palabrasDisponibles: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Ahorcado\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Footer = ({clase, legales}) => {\r\n    return (\r\n        <div className={clase}>\r\n            <p>{legales}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nFooter.propTypes = {\r\n    clase: PropTypes.string,\r\n    legales: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Header.css'\r\n\r\n\r\nconst Header = ({title,logo}) => {\r\n    return ( \r\n        <div className=\"contenido-header\">\r\n            <div>\r\n                <img className='logo' src={logo} alt=\"Guadi Games\"/>\r\n            </div>\r\n            <div className=\"redesNav\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/logo.d0c209d6.png\";","import './App.css';\nimport Ahorcado from './components/Ahorcado';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport logo from './img/logo.png';\n\nconst tematicas = [\n  {name: 'Personajes Animados', value: 'Personajes Animados'},\n  {name: 'Objetos', value: 'Objetos'},\n  {name: 'Paises', value: 'Paises'},\n  {name: 'Nombres', value: 'Nombres'},\n  {name: 'Comidas', value: 'Comidas'},\n]\n\nconst palabrasDisponibles = {\n  'Personajes Animados': [\n    {\n      'palabra': 'merida',\n      'pista': 'personaje muy valiente',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'los increibles',\n      'pista': 'familia de superheroes',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'frozen',\n      'pista': 'una aventura congelada',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {'palabra': 'enredados'},\n    {'palabra': 'bolt'},\n    {'palabra': 'aladdin'},\n    {'palabra': 'moana'},\n    {'palabra': 'barbie'},\n    {'palabra': 'lady bug'},\n    {'palabra': 'cat noir'},\n    {'palabra': 'monster high'},\n    {'palabra': 'bob esponja'},\n    {'palabra': 'calamardo'},\n    {'palabra': 'don cangrejo'},\n    {'palabra': 'arenita'},\n    {'palabra': 'plancton'},\n    {'palabra': 'patricio'},\n    {'palabra': 'fondo de bikini'},\n    {'palabra': 'jazmin'},\n    {'palabra': 'blancanieves'},\n    {'palabra': 'la cenicienta'},\n    {'palabra': 'malefica'},\n    {'palabra': 'cruella'},\n    {'palabra': 'rapunzel'},\n    {'palabra': 'turbo'},\n    {'palabra': 'rayo macqueen'},\n    {'palabra': 'los croods'},\n    {'palabra': 'madagascar'},\n    {'palabra': 'mi villano favorito'},\n    {'palabra': 'minions'},\n    {'palabra': 'eugene'},\n    {'palabra': 'lluvia de hamburguesas'},\n    {'palabra': 'space jam'},\n    {'palabra': 'bugs bunny'},\n    {'palabra': 'mickey mouse'},\n    {'palabra': 'minnie mouse'},\n    {'palabra': 'pluto'},\n    {'palabra': 'goofy'},\n    {'palabra': 'daisy'},\n    {'palabra': 'pato donald'},\n    {'palabra': 'bailarina'},\n    {'palabra': 'scarlett overkill'},\n    {'palabra': 'profesor nefario'},\n    {'palabra': 'el macho'},\n    {'palabra': 'chicken little'},\n    {'palabra': 'la sirenita'},\n    {'palabra': 'ariel'},\n    {'palabra': 'aurora'},\n    {'palabra': 'rango'},\n    {'palabra': 'el gato con botas'},\n    {'palabra': 'violeta'},\n    {'palabra': 'frozono'},\n    {'palabra': 'prodigios'},\n    {'palabra': 'jefe en pañales'},\n    {'palabra': 'unidos'},\n    {'palabra': 'sherlock gnomes'},\n    {'palabra': 'angry birds'},\n    {'palabra': 'buscando a nemo'},\n    {'palabra': 'buscando a dory'},\n    {'palabra': 'descendientes'},\n    {'palabra': 'como entrenar a tu dragon'},\n    {'palabra': 'coco'},\n    {'palabra': 'dumbo'},\n    {'palabra': 'el lorax'},\n    {'palabra': 'el grinch'},\n    {'palabra': 'horton'},\n    {'palabra': 'el alcalde'},\n    {'palabra': 'villaquien'},\n    {'palabra': 'el rey leon'},\n    {'palabra': 'timon'},\n    {'palabra': 'pumba'},\n    {'palabra': 'mulan'},\n    {'palabra': 'mufasa'},\n    {'palabra': 'ferdinand'},\n    {'palabra': 'intensamente'},\n    {'palabra': 'hotel transylvania'},\n    {'palabra': 'dracula'},\n    {'palabra': 'kung fu panda'},\n    {'palabra': 'la bella y la bestia'},\n    {'palabra': 'gaston'},\n    {'palabra': 'la dama y el vagabundo'},\n    {'palabra': 'ratatouille'},\n    {'palabra': 'la era del hielo'},\n    {'palabra': 'manny'},\n    {'palabra': 'diego'},\n    {'palabra': 'la princesa y el sapo'},\n    {'palabra': 'lilo y stitch'},\n    {'palabra': 'la vida secreta de tus mascotas'},\n    {'palabra': 'zootopia'},\n    {'palabra': 'megamente'},\n    {'palabra': 'peter pan'},\n    {'palabra': 'tinker bell'},\n    {'palabra': 'capitan garfio'}\n\n  ],\n  'Objetos': [\n    {\n      'palabra': 'televisor',\n      'pista': 'caja boba',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'tenedor',\n      'pista': 'pariente pequeño del tridente',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'martillo',\n      'pista': 'si te golpea un dedo duele',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    }\n  ],\n  'Paises': [\n    {\n      'palabra': 'Argentina',\n      'pista': 'país sin arreglo',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'Francia',\n      'pista': 'Hogar de Lady Bug',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'Nueva Zelanda',\n      'pista': 'Te bailan el Haka',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {'palabra': 'Alemania'},\n    {'palabra': 'españa'},\n    {'palabra': 'costa rica'},\n    {'palabra': 'estados unidos'},\n    {'palabra': 'etiopia'},\n    {'palabra': 'siria'},\n    {'palabra': 'egipto'},\n    {'palabra': 'china'},\n    {'palabra': 'brasil'},\n    {'palabra': 'uruguay'},\n    {'palabra': 'paraguay'},\n    {'palabra': 'tanzania'},\n    {'palabra': 'rusia'},\n    {'palabra': 'cuba'},\n    {'palabra': 'haiti'},\n    {'palabra': 'honduras'},\n    {'palabra': 'canada'},\n    {'palabra': 'australia'},\n    {'palabra': 'japon'},\n    {'palabra': 'italia'},\n    {'palabra': 'noruega'},\n    {'palabra': 'colombia'},\n    {'palabra': 'venezuela'},\n    {'palabra': 'holanda'},\n    {'palabra': 'belgica'},\n    {'palabra': 'dinamarca'},\n    {'palabra': 'suecia'},\n    {'palabra': 'ucrania'},\n    {'palabra': 'inglaterra'},\n    {'palabra': 'escocia'},\n    {'palabra': 'portugal'},\n    {'palabra': 'hungria'},\n    {'palabra': 'austria'},\n  ],\n  'Comidas': [\n    {\n      'palabra': 'Berengenas a la pizza',\n      'pista': 'increiblemente, le gustan al papá',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'Papas Fritas',\n      'pista': 'le gustan a todos',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'Helado',\n      'pista': 'una aventura congelada',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {'palabra': 'asado'},\n    {'palabra': 'lomito'},\n    {'palabra': 'hamburguesa'},\n    {'palabra': 'ñoquis'},\n    {'palabra': 'ravioles'},\n    {'palabra': 'tallarines'},\n    {'palabra': 'arroz con lentejas'},\n    {'palabra': 'lasaña'},\n    {'palabra': 'huevos revueltos'},\n    {'palabra': 'omelete'},\n    {'palabra': 'tarta de espinaca'},\n    {'palabra': 'tarta de acelga'},\n    {'palabra': 'tarta de jamon y queso'},\n    {'palabra': 'empanadas arabes'},\n    {'palabra': 'empanadas de pollo'},\n    {'palabra': 'empanadas de jamon y queso'},\n    {'palabra': 'pollo a la parrilla'},\n  \n  ],\n  'Nombres': [\n    {\n      'palabra': 'Guadalupe',\n      'pista': 'Una virgen famosa se llama asi',\n      'url': 'https://es.wikipedia.org/wiki/Guadalupe',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'Daniela',\n      'pista': 'familia de superheroes',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {\n      'palabra': 'Maxima',\n      'pista': 'como la reina de Holanda',\n      'url': 'buscar/aqui.com',\n      'url_imagen': 'imagen.com'\n    },\n    {'palabra': 'Alberto'},\n    {'palabra': 'Tiago'},\n    {'palabra': 'Ignacio'},\n    {'palabra': 'Catalina'},\n    {'palabra': 'Maite'},\n    {'palabra': 'Santino'},\n    {'palabra': 'Virginia'},\n    {'palabra': 'Victoria'},\n    {'palabra': 'Tania'},\n    {'palabra': 'Ezequiel'},\n    {'palabra': 'Martin'},\n    {'palabra': 'Estela'},\n    {'palabra': 'Tiziana'},\n    {'palabra': 'Natalia'},\n    {'palabra': 'Carolina'},\n    {'palabra': 'Maria Sol'},\n    {'palabra': 'Francisco'},\n    {'palabra': 'Faustino'},\n    {'palabra': 'Soledad'},\n    {'palabra': 'Lourdes'},\n    {'palabra': 'Camila'},\n    {'palabra': 'Gabriela'},\n    {'palabra': 'Tufic'},\n  ]\n\n\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title=\"Los Juegos de Guadi\" logo={logo} />\n      <div className=\"App-container\">\n        <Ahorcado palabrasDisponibles={palabrasDisponibles} tematicas={tematicas} />  \n      </div>\n      <Footer clase=\"footer\" legales=\"diseñado por Guadalupe Gema Fiorani\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}